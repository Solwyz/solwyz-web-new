name: Deploy solwyz-client

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: solwyz-client
      cancel-in-progress: true

    env:
      IMG_TAG: ${{ github.sha }}              # tag = commit SHA
      TARFILE: solwyz-client_${{ github.sha }}.tar

    steps:
    # ── Check out code ────────────────────────────────────────────
    - uses: actions/checkout@v4

    # ── Build Docker image ───────────────────────────────────────
    - name: Build client image
      run: docker build -t solwyz-client:${{ env.IMG_TAG }} .

    # ── Save image as tar ────────────────────────────────────────
    - name: Save image to tar
      run: |
        docker save solwyz-client:${{ env.IMG_TAG }} -o ${{ env.TARFILE }}
        chmod 644 ${{ env.TARFILE }}

    # ── SCP tar into *frontend* folder on droplet ────────────────
    - name: Copy tar to droplet
      uses: appleboy/scp-action@v0.1.7
      with:
        host:     ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.SSH_USER }}
        key:      ${{ secrets.SSH_PRIVATE_KEY }}
        source:   ${{ env.TARFILE }}
        target:   ~/app/frontend/

    # ── SSH: load image & restart container ──────────────────────
    - name: Load + restart solwyz-client
      uses: appleboy/ssh-action@v1.0.3
      with:
        host:     ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.SSH_USER }}
        key:      ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ~/app/frontend

          # load new image
          docker load -i ${{ env.TARFILE }}

          # stop & remove old container (ignore if absent)
          docker stop solwyz-client || true
          docker rm   solwyz-client || true

          # run new container on 3000→80
          docker run -d \
            --name solwyz-client \
            -p 3000:80 \
            --restart unless-stopped \
            solwyz-client:${{ env.IMG_TAG }}

          # cleanup tar and dangling layers
          rm -f ${{ env.TARFILE }}
          docker image prune -f --filter "dangling=true"
